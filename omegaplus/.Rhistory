plot(Bon.p$num, Bon.p$log.p, col=Bon$contig)
x %% 2 == 0
2 %% 2 == 0
3 %% 2 == 0
length(Bon$contig)
length(unique(Bon$contig))
for (i in length(unique(Bon$contig))){
print(i)
}
for (i in 1:length(unique(Bon$contig))){
print(i)
}
for (i in 1:length(unique(Bon$contig))){
print(i)
Bon$contgroup <- i %% 2 == 0
}
View(Bon.p)
for (i in 1:length(unique(Bon$contig))){
print(contgroup <- i %% 2 == 0)
}
for (i in 1:length(unique(Bon$contig))){
Bon$contgroup <- print(i %% 2 == 0)
}
for (i in 1:length(unique(Bon$contig))){
Bon$contgroup[i] <- print(i %% 2 == 0)
}
for (i in 1:length(unique(Bon$contig))){
Bon$contgroup[i] <- i %% 2 == 0
}
View(Bon.p)
for (i in 1:length(unique(Bon$contig))){
x <- i %% 2 == 0
Bon$contgroup[i] <- x
}
for (i in 1:length(unique(Bon.p$contig))){
x <- i %% 2 == 0
Bon.p$contgroup[i] <- x
}
View(Bon.p)
plot(Bon.p$num, Bon.p$log.p, col=Bon$contgroup)
plot(Bon.p$num, Bon.p$log.p, col=Bon$contgroup, pch=20)
View(Bon.p)
Bon <- read.table("bonferroni_outliers_0.05.txt", header=TRUE, sep="\t")
num <- (1:14532)
log.p <- -log10(Bon$pvalue)
Bon.p <- data.frame(Bon, log.p, num)
for (i in 1:length(unique(Bon.p$contig))){
x <- Bon.p$contig[i] %% 2 == 0
Bon.p$contgroup[i] <- x
}
View(Bon.p)
plot(Bon.p$num, Bon.p$log.p, col=Bon$contgroup, pch=20)
plot(Bon.p$num, Bon.p$log.p, col=Bon$contgroup)
View(Bon)
View(Bon.p)
View(Bon.p)
plot(Bon.p$num, Bon.p$log.p)
for (i in 1:length(unique(Bon.p$contig))){
x <- Bon.p$contig[i] %% 2
Bon.p$contgroup[i] <- x
}
View(Bon.p)
plot(Bon.p$num, Bon.p$log.p, col=Bon$contgroup)
plot(Bon.p$num, Bon.p$log.p)
View(Bon.p)
plot(Bon.p$num, Bon.p$log.p, col=Bon.p$contgroup)
library(ggplot2)
setwd("C:/Users/wengz/Box/Chapter 3/WGS/pcadapt")
Bon <- read.table("bonferroni_outliers_0.05.txt", header=TRUE, sep="\t")
num <- (1:14532)
log.p <- -log10(Bon$pvalue)
Bon.p <- data.frame(Bon, log.p, num)
for (i in 1:length(unique(Bon.p$contig))){
x <- Bon.p$contig[i] %% 2
Bon.p$contgroup[i] <- x
}
plot(Bon.p$num, Bon.p$log.p)
plot(Bon.p$num, Bon.p$log.p, col=Bon.p$contgroup)
plot(Bon.p$num, Bon.p$log.p, col=Bon.p$contgroup)
plot(Bon.p$num, Bon.p$log.p, col=Bon.p$contgroup, pch=19)
x11()
plot(Bon.p$num, Bon.p$log.p, col=Bon.p$contgroup, pch=19)
x11()
plot(Bon.p$num, Bon.p$log.p, col=Bon.p$contgroup)
View(Bon.p)
plot(Bon.p$num, Bon.p$log.p, fill=Bon.p$contgroup)
?plot
x11()
ggplot(Bon.p, aes(x=num, y=log.p, color=contgroup)) + geom_point()
Bon.p$ <- as.factor(Bon.p$contgroup)
Bon.p$contgroup <- as.factor(Bon.p$contgroup)
x11()
ggplot(Bon.p, aes(x=num, y=log.p, color=contgroup)) + geom_point()
View(Bon.p)
Bon <- read.table("bonferroni_outliers_0.05.txt", header=TRUE, sep="\t")
num <- (1:14532)
log.p <- -log10(Bon$pvalue)
Bon.p <- data.frame(Bon, log.p, num)
for (i in 1:length(unique(Bon.p$contig))){
x <- Bon.p$contig[i] %% 2
Bon.p$contgroup[i] <- x
}
View(Bon.p)
for (i in 1:length(Bon.p$contig)){
x <- Bon.p$contig[i] %% 2
Bon.p$contgroup[i] <- x
}
View(Bon.p)
Bon.p$contgroup <- as.factor(Bon.p$contgroup)
x11()
ggplot(Bon.p, aes(x=num, y=log.p, color=contgroup)) + geom_point()
x11()
ggplot(Bon.p, aes(x=num, y=log.p, color=contgroup)) +
geom_point() +
scale_color_manual(values=c("black", "grey"))
x11()
ggplot(Bon.p, aes(x=num, y=log.p, color=contgroup)) +
geom_point(size=0.1) +
scale_color_manual(values=c("black", "grey"))
x11()
ggplot(Bon.p, aes(x=num, y=log.p, color=contgroup)) +
geom_point(size=0.1) +
scale_color_manual(values=c("grey", "black"))
Bon <- read.table("pvalue_outliers.txt", header=TRUE, sep="\t")
loci <- read.table("pvalue_outliers.txt", header=TRUE, sep="\t")
num <- (1:length(loci))
length(loci)
length(loci[,1])
num <- (1:length(loci[,1]))
View(loci)
log.p <- -log10(loci$pvalue)
loci.p <- data.frame(loci, log.p, num)
View(loci.p)
for (i in 1:length(loci.p$contig)){
x <- loci.p$contig[i] %% 2
loci.p$contgroup[i] <- x
}
View(loci.p)
gc()
gc()
rm()
rm(Bon)
rm(Bon.p)
rm(contgroup)
rm(i)
rm(log.p)
rm(num)
rm(x)
library(ggplot2)
setwd("C:/Users/wengz/Box/Chapter 3/WGS/pcadapt")
loci <- read.table("pvalue_outliers.txt", header=TRUE, sep="\t")
num <- (1:length(loci[,1]))
log.p <- -log10(loci$pvalue)
loci.p <- data.frame(loci, log.p, num)
for (i in 1:length(loci.p$contig)){
print(paste0("working on contig", i))
#x <- loci.p$contig[i] %% 2
#loci.p$contgroup[i] <- x
}
View(loci.p)
contig[0]
contig[1]
loci.p$contig[1]
loci.p$contig[110]
for (i in 1:length(loci.p$contig)){
print(paste0("working on contig", loci.p$contig[i]))
#x <- loci.p$contig[i] %% 2
#loci.p$contgroup[i] <- x
}
for (i in 1:length(loci.p$contig)){
print(paste0("working on contig", loci.p$contig[i]))
x <- loci.p$contig[i] %% 2
loci.p$contgroup[i] <- x
}
loci.p$contgroup <- as.factor(loci.p$contgroup)
x11()
ggplot(Bon.p, aes(x=num, y=log.p, color=contgroup)) +
geom_point(size=0.1) +
scale_color_manual(values=c("grey", "black"))
ggplot(loci.p, aes(x=num, y=log.p, color=contgroup)) +
geom_point(size=0.1) +
scale_color_manual(values=c("grey", "black"))
length(loci.p$contig)
length(loci.p$contig[0])
length(loci.p$contig[1])
length(loci.p$contig[which(loci.p$contig == 0)])
length(loci.p$contig[which(loci.p$contig == 1)])
loci.p$contig[1]
loci.p$contig[2]
loci.p$contig[3]
loci.p$contig[3for (i in 1:length(loci.p$contig)){
#print(paste0("working on contig", loci.p$contig[i]))
ctg <- loci.p$contig[i]
leng <- length(loci.p$contig[which(loci.p$contig == ctg)])
print(leng)
}]
for (i in 1:length(loci.p$contig)){
#print(paste0("working on contig", loci.p$contig[i]))
ctg <- loci.p$contig[i]
leng <- length(loci.p$contig[which(loci.p$contig == ctg)])
print(leng)
}
for (i in 1:length(loci.p$contig)){
print(paste0("working on contig", loci.p$contig[i]))
ctg <- loci.p$contig[i]
leng <- length(loci.p$contig[which(loci.p$contig == ctg)])
loci.p$contlength[i] <- leng
}
View(loci.p)
loci.p <- order(loci.p$contlength, loci.p$contig)
loci.p <- loci.p[order(loci.p$contlength, loci.p$contig),]
loci <- read.table("pvalue_outliers.txt", header=TRUE, sep="\t")
num <- (1:length(loci[,1]))
log.p <- -log10(loci$pvalue)
loci.p <- data.frame(loci, log.p, num)
for (i in 1:length(loci.p$contig)){
print(paste0("working on contig", loci.p$contig[i]))
x <- loci.p$contig[i] %% 2
loci.p$contgroup[i] <- x
ctg <- loci.p$contig[i]
leng <- length(loci.p$contig[which(loci.p$contig == ctg)])
loci.p$contlength[i] <- leng
}
View(loci.p)
length(loci.p)
length(loci.p$contlength)
loci.p <- loci.p[order(loci.p$contlength, loci.p$contig),]
View(loci.p)
loci.p <- loci.p[order(loci.p$contlength, loci.p$contig),]
View(loci.p)
loci <- read.table("pvalue_outliers.txt", header=TRUE, sep="\t")
num <- (1:length(loci[,1]))
log.p <- -log10(loci$pvalue)
loci.p <- data.frame(loci, log.p, num)
for (i in 1:length(loci.p$contig)){
print(paste0("working on contig", loci.p$contig[i]))
x <- loci.p$contig[i] %% 2
loci.p$contgroup[i] <- x
ctg <- loci.p$contig[i]
leng <- length(loci.p$contig[which(loci.p$contig == ctg)])
loci.p$contlength[i] <- leng
}
loci <- read.table("pvalue_outliers.txt", header=TRUE, sep="\t")
num <- (1:length(loci[,1]))
log.p <- -log10(loci$pvalue)
loci.p <- data.frame(loci, log.p, num)
View(loci.p)
loci.p$contgroup <- apply(loci.p, 2, FUN = function(x) x[1] %% 2)
View(loci.p)
View(loci.p)
View(loci.p)
loci.p$contgroup <- apply(loci.p, 2, FUN = function(x) print(x[1] %% 2))
loci.p$contgroup <- apply(loci.p, 2, FUN = function(x) x[1] %% 2)
loci.p$contgroup <- apply(loci.p, 2, FUN = function(x) x[1] %% 2)
loci.p <- data.frame(loci, log.p, num)
loci.p$contgroup <- apply(loci.p, 2, FUN = function(x) x[1] %% 2)
View(loci.p)
loci.p <- data.frame(loci, log.p, num)
loci.p$contgroup <- apply(loci.p, 2, FUN = function(x) x[1])
View(loci.p)
loci.p <- data.frame(loci, log.p, num)
loci.p$contgroup <- apply(loci.p, 2, FUN = function(x) print(x[1]))
loci.p <- data.frame(loci, log.p, num)
loci.p$contgroup <- apply(loci.p, 1, FUN = function(x) x[1])
View(loci)
View(loci.p)
loci.p <- data.frame(loci, log.p, num)
loci.p$contgroup <- apply(loci.p, 1, FUN = function(x) x[1] %% 2)
View(loci.p)
loci.p$length <- apply(loci.p, 1, FUN = function(x) length(x[which(x == x)]))
View(loci.p)
loci.p <- data.frame(loci, log.p, num)
loci.p$contgroup <- apply(loci.p, 1, FUN = function(x) x[1] %% 2)
length(loci.p[1])
length(loci.p[2])
length(loci.p[[2])
length(loci.p[[2]])
View(loci.p)
View(loci.p)
loci.p$length <- apply(loci.p, 1, FUN = function(x) length(x[which(x == unique(x))]))
View(loci.p)
loci.p$length <- apply(loci.p, 1, FUN = function(x) length(x[which(x[1] == unique(x[1]))]))
View(loci.p)
loci.p$length <- apply(loci.p, 1, FUN = function(x) length(x[subset(x[1] == unique(x[1]))]))
loci.p$length <- apply(loci.p, 1, FUN = function(x) length(x[x[1] == unique(x[1]),]))
loci.p$length <- apply(loci.p, 1, FUN = function(x) length(x[subset(x[1] == unique(x[1])),]))
library(ggplot2)
setwd("C:/Users/wengz/Box/Chapter 3/WGS/pcadapt")
loci <- read.table("pvalue_outliers.txt", header=TRUE, sep="\t")
num <- (1:length(loci[,1]))
log.p <- -log10(loci$pvalue)
loci.p <- data.frame(loci, log.p, num)
loci.p$contgroup <- apply(loci.p, 1, FUN = function(x) x[1] %% 2)
for (i in 1:length(loci.p$contig)){
print(paste0("working on contig", loci.p$contig[i]))
#x <- loci.p$contig[i] %% 2
#loci.p$contgroup[i] <- x
ctg <- loci.p$contig[i]
leng <- length(loci.p$contig[which(loci.p$contig == ctg)])
loci.p$contlength[i] <- leng
}
loci.sort <- loci.p[order(loci.p$contlength, loci.p$pos, decreasing = TRUE),]
loci.sort$contgroup <- as.factor(loci.sort$contgroup)
loci.sort <- data.frame(loci.sort, num)
x11()
ggplot(loci.sort[1:100000,], aes(x=num.1, y=log.p, color=as.factor(contgroup))) +
geom_point(size=0.1) +
scale_color_manual(values=c("grey", "black"))
Bon <- read.table("bonferroni_outliers_0.05.txt", header=TRUE, sep="\t")
num <- (1:14532)
log.p <- -log10(Bon$pvalue)
Bon.p <- data.frame(Bon, log.p, num)
for (i in 1:length(Bon.p$contig)){
x <- Bon.p$contig[i] %% 2
Bon.p$contgroup[i] <- x
}
Bon.p$contgroup <- as.factor(Bon.p$contgroup)
x11()
ggplot(Bon.p, aes(x=num, y=log.p, color=contgroup)) +
geom_point(size=0.1) +
scale_color_manual(values=c("grey", "black"))
gc()
library(openintro)
library(ggplot2)
library(moments)
library(robustbase)
library(univOutl)
setwd("C:/Users/wengz/Dropbox/Chapter 3/Nebria_ingens_WGS/omegaplus")
omegaplus.out <- read.table("omegaPlus_out_final")
# using quantile to define outlier and write them into a bed file
quantile=0.995
upper_bound <- quantile(omegaplus.out$V3, quantile)
View(omegaplus.out)
# manhattan plot
omegaplus.out$V4 <- (1:length(omegaplus.out$V1))
View(omegaplus.out)
x11()
ggplot(omegaplus.out, aes(x=omegaplus.out$V4, y=omegaplus.out$V1)) +
geom_point(size=0.1, col=0.1) +
geom_hline(yintercept=upper_bound, linetype="dashed", color = "red", size=2)
x11()
ggplot(omegaplus.out, aes(x=V4, y=V1)) +
geom_point(size=0.1, col=0.1) +
geom_hline(yintercept=upper_bound, linetype="dashed", color = "red", size=0.5)
x11()
ggplot(omegaplus.out, aes(x=V4, y=V3)) +
geom_point(size=0.1, col=0.1) +
geom_hline(yintercept=upper_bound, linetype="dashed", color = "red", size=0.5)
View(omegaplus.out)
x11()
ggplot(omegaplus.out, aes(x=V4, y=V3)) +
geom_point(size=1, col="black") +
geom_hline(yintercept=upper_bound, linetype="dashed", color = "red", size=0.5)
x11()
ggplot(omegaplus.out, aes(x=V4, y=log(V3))) +
geom_point(size=1, col="black") +
geom_hline(yintercept=log(upper_bound), linetype="dashed", color = "red", size=0.5)
sqr(10)
qr(10)
rt(10)
x11()
ggplot(omegaplus.out, aes(x=V4, y=sqrt(V3))) +
geom_point(size=1, col="black") +
geom_hline(yintercept=sqrt(upper_bound), linetype="dashed", color = "red", size=0.5)
x11()
ggplot(omegaplus.out, aes(x=V4, y=sqrt(V3))) +
geom_point(size=1, col="black") +
xlab("position") +
ylab(bquote("Omega statistic"^"1/2")) +
geom_hline(yintercept=sqrt(upper_bound), linetype="dashed", color = "red", size=1.5)
x11()
ggplot(omegaplus.out, aes(x=V4, y=sqrt(V3))) +
geom_point(size=1, col="black") +
xlab("position") +
ylab(bquote("Omega statistic"^"1/2")) +
geom_hline(yintercept=sqrt(upper_bound), linetype="dashed", color = "red", size=1.5)
x11()
ggplot(omegaplus.out, aes(x=V4, y=sqrt(V3))) +
geom_point(size=1, col="black") +
xlab("position") +
ylab(bquote("ω"^"1/2")) +
geom_hline(yintercept=sqrt(upper_bound), linetype="dashed", color = "red", size=1)
x11()
ggplot(omegaplus.out, aes(x=V4, y=sqrt(V3))) +
geom_point(size=1, col="black") +
xlab("position") +
ylab(bquote(expression(omega)^"1/2")) +
geom_hline(yintercept=sqrt(upper_bound), linetype="dashed", color = "red", size=1)
x11()
ggplot(omegaplus.out, aes(x=V4, y=sqrt(V3))) +
geom_point(size=1, col="black") +
xlab("position") +
ylab(bquote("\u03a9")) +
geom_hline(yintercept=sqrt(upper_bound), linetype="dashed", color = "red", size=1)
x11()
ggplot(omegaplus.out, aes(x=V4, y=sqrt(V3))) +
geom_point(size=1, col="black") +
xlab("position") +
ylab("expression(omega)") +
geom_hline(yintercept=sqrt(upper_bound), linetype="dashed", color = "red", size=1)
x11()
ggplot(omegaplus.out, aes(x=V4, y=sqrt(V3))) +
geom_point(size=1, col="black") +
xlab("position") +
ylab(expression(omega)) +
geom_hline(yintercept=sqrt(upper_bound), linetype="dashed", color = "red", size=1)
x11()
ggplot(omegaplus.out, aes(x=V4, y=sqrt(V3))) +
geom_point(size=1, col="black") +
xlab("position") +
ylab(expression(sqrt(omega))) +
geom_hline(yintercept=sqrt(upper_bound), linetype="dashed", color = "red", size=1)
library(openintro)
library(ggplot2)
library(moments)
library(robustbase)
library(univOutl)
setwd("C:/Users/wengz/Dropbox/Chapter 3/Nebria_ingens_WGS/omegaplus")
omegaplus.out <- read.table("omegaPlus_out_final")
# using quantile to define outlier and write them into a bed file
quantile=0.995
upper_bound <- quantile(omegaplus.out$V3, quantile)
x11()
ggplot(omegaplus.out, aes(x=sqrt(V3))) +
geom_density(alpha=.2, fill="lightblue", color="darkblue") +
geom_vline(xintercept = log(upper_bound), linetype="dotted", color = "red", size=1) +
#geom_text(aes(x=log(upper_bound), label="cutoff at 99.5% quantile", y=0.6), col="red", angle=90, vjust = 1.2, text=element_text(size=14)) +
xlab(expression(sqrt(omega))) + ylab("density") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
x11()
ggplot(omegaplus.out, aes(x=V4, y=log(V3))) +
geom_point(size=1, col="black") +
xlab("position") +
ylab(expression(log(omega))) +
geom_hline(yintercept=sqrt(upper_bound), linetype="dashed", color = "red", size=1)
omegaplus.out$V4 <- (1:length(omegaplus.out$V3))
x11()
ggplot(omegaplus.out, aes(x=V4, y=log(V3))) +
geom_point(size=1, col="black") +
xlab("position") +
ylab(expression(log(omega))) +
geom_hline(yintercept=sqrt(upper_bound), linetype="dashed", color = "red", size=1)
x11()
ggplot(omegaplus.out, aes(x=V4, y=log(V3))) +
geom_point(size=1, col="black") +
xlab("position") +
ylab(expression(log(omega))) +
ylim(0, max(log(V3))) +
geom_hline(yintercept=sqrt(upper_bound), linetype="dashed", color = "red", size=1)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
x11()
ggplot(omegaplus.out, aes(x=V4, y=log(V3))) +
geom_point(size=1, col="black") +
xlab("position") +
ylab(expression(log(omega))) +
ylim(0, max(log(omegaplus.out$V3))) +
geom_hline(yintercept=sqrt(upper_bound), linetype="dashed", color = "red", size=1)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
x11()
ggplot(omegaplus.out, aes(x=V4, y=log(V3))) +
geom_point(size=1, col="black") +
xlab("position") +
ylab(expression(log(omega))) +
ylim(0, max(log(omegaplus.out$V3))) +
geom_hline(yintercept=log(upper_bound), linetype="dashed", color = "red", size=1)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
x11()
ggplot(omegaplus.out, aes(x=V4, y=log(V3))) +
geom_point(size=1, col="black") +
xlab("position") +
ylab(expression(log(omega))) +
geom_hline(yintercept=log(upper_bound), linetype="dashed", color = "red", size=1)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
x11()
ggplot(omegaplus.out, aes(x=sqrt(V3))) +
geom_density(alpha=.2, fill="lightblue", color="darkblue") +
geom_vline(xintercept = log(upper_bound), linetype="dotted", color = "red", size=1) +
#geom_text(aes(x=log(upper_bound), label="cutoff at 99.5% quantile", y=0.6), col="red", angle=90, vjust = 1.2, text=element_text(size=14)) +
xlab(expression(sqrt(omega))) + ylab("density") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
x11()
ggplot(omegaplus.out, aes(x=sqrt(V3))) +
geom_density(alpha=.2, fill="lightblue", color="darkblue") +
geom_vline(xintercept = log(upper_bound), linetype="dotted", color = "red", size=1) +
#geom_text(aes(x=log(upper_bound), label="cutoff at 99.5% quantile", y=0.6), col="red", angle=90, vjust = 1.2, text=element_text(size=14)) +
xlab(expression(sqrt(omega))) + ylab("density") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
x11()
ggplot(omegaplus.out, aes(x=sqrt(V3))) +
geom_density(alpha=.2, fill="lightblue", color="darkblue") +
geom_vline(xintercept = log(upper_bound), linetype="dotted", color = "red", size=1) +
#geom_text(aes(x=log(upper_bound), label="cutoff at 99.5% quantile", y=0.6), col="red", angle=90, vjust = 1.2, text=element_text(size=14)) +
xlab(expression(sqrt(omega))) + ylab("density") +
xlim(min(log(omegaplus.out$V3)), max(log(omegaplus.out$V3)))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
x11()
ggplot(omegaplus.out, aes(x=sqrt(V3))) +
geom_density(alpha=.2, fill="lightblue", color="darkblue") +
geom_vline(xintercept = log(upper_bound), linetype="dotted", color = "red", size=1) +
#geom_text(aes(x=log(upper_bound), label="cutoff at 99.5% quantile", y=0.6), col="red", angle=90, vjust = 1.2, text=element_text(size=14)) +
xlab(expression(sqrt(omega))) + ylab("density") +
xlim(0, max(log(omegaplus.out$V3)))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
x11()
ggplot(omegaplus.out, aes(x=log(V3))) +
geom_density(alpha=.2, fill="lightblue", color="darkblue") +
geom_vline(xintercept = log(upper_bound), linetype="dotted", color = "red", size=1) +
#geom_text(aes(x=log(upper_bound), label="cutoff at 99.5% quantile", y=0.6), col="red", angle=90, vjust = 1.2, text=element_text(size=14)) +
xlab(expression(log(omega))) + ylab("density") +
xlim(0, max(log(omegaplus.out$V3)))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"))
max(log(omegaplus.out$V3))
