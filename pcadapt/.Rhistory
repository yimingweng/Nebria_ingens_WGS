summary(x$loadings)
padj <- p.adjust(x$pvalues,method="bonferroni")
alpha <- 0.1
outliers <- which(padj < alpha)
length(outliers)
x11()
plot(x , option = "manhattan")
padj <- p.adjust(x$pvalues,method="bonferroni")
alpha <- 0.1
outliers <- which(padj < alpha)
length(outliers)
padj <- p.adjust(x$pvalues,method="BH")
alpha <- 0.1
outliers <- which(padj < alpha)
length(outliers)
outliers
write.csv(outliers, "E:/YiMing/pcadapt/test.txt")
write.csv(outliers, "E:/YiMing/pcadapt/test.txt")
length(outliers)
View(x)
x[["pass"]]
pos <- read.table("E:/YiMing/pcadapt/lcs_final.bim", header=F, sep="\t")
View(pos)
View(pos)
View(x)
p <- cbind(pos$V2, x$pvalues)
View(p)
x[["pvalues"]]
colnames(m2) <- c("pos","pvalues")
colnames(p) <- c("pos","pvalues")
padj <- p.adjust(p$pvalues,method="bonferroni")
alpha <- 0.1
outliers <- which(padj < alpha)
length(outliers)
outliers
padj
length(outliers)
outliers
p <- cbind(p, padj)
View(p)
alpha <- 0.1
outliers <- p$pos[which(padj < alpha)]
View(p)
outliers <- p@pos[which(padj < alpha)]
outliers <- p$pos[which(p$padj < alpha)]
outliers <- p$pos
outliers=NULL
outliers <- p$pos[which(p$padj < alpha)]
View(p)
outliers <- which(p$padj < alpha)
p$pos[which(p$padj < alpha)]
str(p)
summary(p)
p$padj<-as.numeric(p$padj)
View(p)
View(pos)
View(x)
x[["pvalues"]]
View(p)
padj
(p <- cbind(p, as.numeric(padj)))
p <- cbind(p, as.numeric(padj))
alpha <- 0.1
outliers <- which(p$padj < alpha)
outliers <- p$pvalue[which(p$padj < alpha)]
summary(p)
p <- cbind(pos$V2, x$pvalues)
colnames(p) <- c("pos","pvalues")
padj <- p.adjust(p$pvalues, method="bonferroni")
p <- cbind(p, as.numeric(padj))
outliers <- which(p$V3 < alpha)
View(p)
p <- as.data.frame(pos$V2, x$pvalues)
p <- as.data.frame(pos$V2, x$pvalues)
p <- as.data.frame(pos=pos$V2, pvalues=x$pvalues)
?as.data.frame()
p=NULL
p <- as.data.frame(p, pos=pos$V2, pvalues=x$pvalues)
View(p)
p = NULL
p <- as.data.frame(p, pos=pos$V2, pvalues=x$pvalues)
p <- as.data.frame(pos, pos=pos$V2, pvalues=x$pvalues)
View(p)
y <- as.data.frame(pos=pos$V2,
pvalues=x$pvalues)
y <- data.frame(pos=pos$V2,
pvalues=x$pvalues)
View(p)
View(y)
p <- data.frame(pos=pos$V2,
pvalues=x$pvalues)
View(p)
padj <- p.adjust(p$pvalues, method="bonferroni")
p <- data.frame(p, as.numeric(padj))
View(p)
padj <- p.adjust(p$pvalues, method="bonferroni")
p <- data.frame(p, as.numeric(padj))
View(p)
p <- data.frame(p, as.numeric(padj))
p <- cbind(pos=pos$V2,
pvalues=x$pvalues)
View(p)
padj <- p.adjust(p$pvalues, method="bonferroni")
pos <- read.table("E:/YiMing/pcadapt/lcs_final.bim", header=F, sep="\t")
p <- cbind(pos=pos$V2,
pvalues=x$pvalues)
padj <- p.adjust(p$pvalues, method="bonferroni")
padj <- p.adjust(p[[pvalues]], method="bonferroni")
p <- c(pos=pos$V2,
pvalues=x$pvalues)
padj <- p.adjust(p[[pvalues]], method="bonferroni")
pos <- read.table("E:/YiMing/pcadapt/lcs_final.bim", header=F, sep="\t")
p <- cbind(pos$V2,x$pvalues)
colnames(p) <- c("pos","pvalues")
padj <- p.adjust(p$pvalues, method="bonferroni")
padj <- p.adjust(p[['pvalues']], method="bonferroni")
padj <- p.adjust(p[[2]], method="bonferroni")
p <- data.frame(p[[1]],p[[2]], padj)
View(p)
.
.
pos <- read.table("E:/YiMing/pcadapt/lcs_final.bim", header=F, sep="\t")
p <- cbind(pos$V2,x$pvalues)
colnames(p) <- c("pos","pvalues")
padj <- p.adjust(x$pvalues, method="bonferroni")
p <- data.frame(p[[1]],p[[2]], padj)
View(p)
View(y)
pos <- read.table("E:/YiMing/pcadapt/lcs_final.bim", header=F, sep="\t")
p <- cbind(pos$V2,x$pvalues)
colnames(p) <- c("pos","pvalues")
padj <- p.adjust(x$pvalues,method="bonferroni")
alpha <- 0.1
outliers <- which(padj < alpha)
length(outliers)
pos <- read.table("E:/YiMing/pcadapt/lcs_final.bim", header=F, sep="\t")
p <- cbind(pos$V2,x$pvalues)
colnames(p) <- c("pos","pvalues")
padj <- p.adjust(p$pvalues, method="bonferroni")
outliers
p <- data.frame(pos$V2,x$pvalues,padj=padj)
View(p)
padj <- p.adjust(x$pvalues,method="bonferroni")
alpha <- 0.1
outliers <- which(padj < alpha)
length(outliers)
padj <- p.adjust(x$pvalues,method="bonferroni")
alpha <- 0.1
outliers <- which(padj < alpha)
length(outliers)
pos <- read.table("E:/YiMing/pcadapt/lcs_final.bim", header=F, sep="\t")
p <- data.frame(pos$V2,x$pvalues,padj=padj)
colnames(p) <- c("pos","pvalues")
padj
summary(padj)
length(outliers)
# Bonferroni correction
padj2 <- p.adjust(x$pvalues,method="bonferroni")
outliers2 <- which(padj < alpha)
length(outliers2)
p <- data.frame(pos$V2,x$pvalues,padj=padj)
p <- data.frame(pos=pos$V2,pvalue=x$pvalues,padj=padj)
View(p)
# Choosing the number K of Principal Components
# Scree plot:
x <- pcadapt(input = variants, K = 10, min.maf = 0.05 , LD.clumping = list(size = 500, thr = 0.1))
# Choosing the number K of Principal Components
# Scree plot:
x <- pcadapt(input = variants, K = 10, min.maf = 0.05 , LD.clumping = list(size = 500, thr = 0.1))
setwd("E:/YiMing/pcadapt/")
# convert the vcf file to bed file
variants <- read.pcadapt("E:/YiMing/pcadapt/lcs_final.bed", type = "bed", type.out = "bed")
# Choosing the number K of Principal Components
# Scree plot:
x <- pcadapt(input = variants, K = 10, min.maf = 0.05 , LD.clumping = list(size = 500, thr = 0.1))
summary(x$loadings)
# Bonferroni correction
padj <- p.adjust(x$pvalues,method="bonferroni")
padj
# Benjamini-Hochberg Procedure
padj <- p.adjust(x$pvalues,method="BH")
padj
pos <- read.table("E:/YiMing/pcadapt/lcs_final.bim", header=F, sep="\t")
View(pos)
# Bonferroni correction
padj <- p.adjust(x$pvalues,method="bonferroni")
p <- data.frame(pos=pos$V2,pvalue=x$pvalues,padj=padj)
View(p)
# Benjamini-Hochberg Procedure
padj <- p.adjust(x$pvalues,method="BH")
p <- data.frame(p[[1]],p[[2]], padj)
View(p)
alpha <- 0.1
outliers <- which(p$padj < alpha)
outliers
outliers <- p$pvalue[which(p$padj < alpha)]
length(outliers)
p$pvalue
View(p)
p <- data.frame(pos=pos$V2,pvalue=x$pvalues,padj=padj)
outliers <- p$pvalue[which(p$padj < alpha)]
length(outliers)
outliers
View(p)
outliers <- p$pos[which(p$padj < alpha)]
length(outliers)
outliers
length(outliers)
# Bonferroni correction
padj <- p.adjust(x$pvalues,method="bonferroni")
p <- data.frame(pos=pos$V2,pvalue=x$pvalues,padj=padj)
padj <- p.adjust(p$pvalues, method="bonferroni")
alpha <- 0.1
outliers <- p$pos[which(p$padj < alpha)]
length(outliers)
outliers
View(p)
outliers <- p$pos[which(p$padj < alpha)]
length(outliers)
?pcadapt:plot
?plot
x11()
plot(x , option = "manhattan")
?merge
View(p)
out.table <- merge(outlier, p, by.y = "pos")
out.table <- merge(outliers, p, by.y = "pos")
out <- data.frame(pos=outliers)
out.table <- merge(out, p, by.x = "pos")
View(out.table)
write.ftable(out.table, "E:/YiMing/pcadapt/test.txt")
write.table(out.table, "E:/YiMing/pcadapt/test.txt")
x11()
plot(x , option = "manhattan")
# Manhattan Plot
x11()
plot(x , option = "manhattan")
View(pos)
View(out)
plot(x, option = "screeplot")
x11()
plot(x, option = "screeplot")
x11()
plot(x, option = "scores", i = 1, j = 2, pop = poplist.sp)
Pop <- read.table("E:/YiMing/pcadapt/ingens_lcs_final_list", header = T, sep = "\t")
poplist.sp <- Pop$sp
poplist.names <- Pop$pop
x11()
plot(x, option = "scores", i = 1, j = 2, pop = poplist.sp)
x11()
plot(x, option = "scores", i = 9, j = 10, pop = poplist.names)
# Manhattan Plot
x11()
plot(x , option = "manhattan")
x11()
plot(x, option = "qqplot")
x11()
hist(x$pvalues, xlab = "p-values", main = NULL, breaks = 50, col = "orange")
x11()
plot(x, option = "stat.distribution")
pos <- read.table("E:/YiMing/pcadapt/lcs_final.bim", header=F, sep="\t")
p <- data.frame(pos=pos$V2,pvalue=x$pvalues,padj=padj)
# Choosing 0.1 a cutoff for outlier detection
# Q value
qval <- qvalue(x$pvalues)$qvalues
alpha <- 0.1
q.outliers <- p$pos[which(p$qval < alpha)]
length(q.outliers)
qval <- qvalue(x$pvalues)$qvalues
qval
alpha <- 0.1
q.outliers <- p$pos[which(p$qval < alpha)]
length(q.outliers)
p <- data.frame(pos=pos$V2,pvalue=x$pvalues)
p <- data.frame(pos=pos$V2,pvalue=x$pvalues,qval=qval)
p <- data.frame(pos=pos$V2,pvalue=x$pvalues)
q.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,qval=qval)
View(q.p)
q.outliers <- p$pos[which(p$qval < alpha)]
length(q.outliers)
q.outliers <- q.p$pos[which(q.p$qval < alpha)]
length(q.outliers)
q.out <- data.frame(pos=outliers)
View(q.out)
q.out <- data.frame(pos=q.outliers)
q.out.table <- merge(q.out, p, by.x = "pos")
View(q.out.table)
q.out.table <- merge(q.out, q.p, by.x = "pos")
View(q.out.table)
write.table(q.out.table, "E:/YiMing/pcadapt/qvalue", row.names=FALSE, sep="\t", quote = FALSE)
# Benjamini-Hochberg Procedure
padj <- p.adjust(x$pvalues,method="BH")
alpha <- 0.1
padj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,padj=padj)
padj.outliers <- padj.p$pos[which(padj.p$qval < alpha)]
padj.outliers <- padj.p$pos[which(padj.p$padj < alpha)]
length(padj.outliers)
# Benjamini-Hochberg Procedure
padj <- p.adjust(x$pvalues,method="BH")
alpha <- 0.1
padj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,padj=padj)
padj.outliers <- padj.p$pos[which(padj.p$padj < alpha)]
length(padj.outliers)
p <- data.frame(pos=pos$V2,pvalue=x$pvalues)
padj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,padj=padj)
padj.outliers <- padj.p$pos[which(padj.p$padj < alpha)]
length(padj.outliers)
padj.p
View(padj.p)
View(q.p)
# Benjamini-Hochberg Procedure
padj <- p.adjust(x$pvalues,method="BH")
padj
length(padj.outliers)
padj.out <- data.frame(pos=padj.outliers)
padj.out.table <- merge(padj.out, padj.p, by.x = "pos")
write.table(padj.out.table, "E:/YiMing/pcadapt/BH.txt", row.names=FALSE, sep="\t", quote = FALSE)
# Bonferroni correction
bonadj <- p.adjust(x$pvalues,method="bonferroni")
alpha <- 0.1
bonadj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,bonadj=bonadjj)
bonadj.outliers <- bonadj.p$pos[which(bonadj.p$padj < alpha)]
length(bonadj.outliers)
bonadj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,bonadj=bonadjj)
bonadj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,bonadj=bonadj)
bonadj.outliers <- bonadj.p$pos[which(bonadj.p$padj < alpha)]
length(bonadj.outliers)
bonadj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,bonadj=bonadj)
View(bonadj.p)
bonadj.outliers <- bonadj.p$pos[which(bonadj.p$bonadj < alpha)]
length(bonadj.outliers)
length(bonadj.outliers)
bonadj.out <- data.frame(pos=bonadj.outliers)
bonadj.out.table <- merge(bonadj.out, bonadj.p, by.x = "pos")
View(bonadj.out.table)
View(bonadj.out.table)
View(bonadj.out.table)
View(bonadj.out.table)
bonadj.out.table$pos <- gsub('Contig_', '', bonadj.out.table$pos)
View(bonadj.out.table)
bonadj.final.table <- data.frame(do.call('rbind', strsplit(as.character(bonadj.out.table$pos),':',fixed=TRUE)))
View(bonadj.final.table)
View(bonadj.out.table)
bonadj.final.table <- data.frame(do.call('rbind', strsplit(as.character(bonadj.out.table$pos),':',fixed=TRUE)), bonadj.out.table$pvalue, bonadj.out.table$bonadj)
View(bonadj.final.table)
colnames(bonadj.final.table) <- c("contig","pos", "pvalue", "adjust")
View(bonadj.final.table)
bonadj.final.table[order(bonadj.final.table$contig),]
bonadj.final.table <- bonadj.final.table[order(bonadj.final.table$contig),]
View(bonadj.final.table)
bonadj.final.table$contig <- as.numeric(bonadj.final.table$contig)
bonadj.final.table <- bonadj.final.table[order(bonadj.final.table$contig),]
View(bonadj.final.table)
bonadj.final.table <- bonadj.final.table[order(bonadj.final.table[,1:2],]
bonadj.final.table <- bonadj.final.table[order(bonadj.final.table[,1:2],)]
bonadj.final.table <- bonadj.final.table[order(bonadj.final.table[,1:2])]
bonadj.final.table <- bonadj.final.table[order(bonadj.final.table[,1])]
bonadj.final.table <- bonadj.final.table[order(bonadj.final.table[, 1])]
bonadj.final.table <- bonadj.final.table[order(bonadj.final.table$contig),order(bonadj.final.table$pos)]
bonadj.final.table$contig <- as.numeric(bonadj.final.table$contig)
bonadj.final.table$pos <- as.numeric(bonadj.final.table$pos)
bonadj.final.table <- bonadj.final.table[order(bonadj.final.table$contig),order(bonadj.final.table$pos)]
bonadj.final.table <- bonadj.final.table[order(bonadj.final.table$contig, bonadj.final.table$pos)]
bonadj.final.table <- bonadj.final.table[order(bonadj.final.table$contig)]
bonadj.final.table <- bonadj.final.table[order(bonadj.final.table$contig),]
bonadj.final.table <- bonadj.final.table[order(bonadj.final.table$contig, bonadj.final.table$pos),]
View(bonadj.final.table)
write.table(bonadj.final.table, "E:/YiMing/pcadapt/bonferroni.txt", row.names=FALSE, sep="\t", quote = FALSE)
View(q.out.table)
q.final.table <- data.frame(do.call('rbind', strsplit(as.character(q.out.table$pos),':',fixed=TRUE)), q.out.table$pvalue, q.out.table$qval)
View(q.final.table)
colnames(bonadj.final.table) <- c("contig","pos", "pvalue", "qvalue")
View(q.final.table)
colnames(q.final.table) <- c("contig","pos", "pvalue", "qvalue")
View(q.final.table)
View(bonadj.final.table)
# Bonferroni correction
bonadj <- p.adjust(x$pvalues,method="bonferroni")
bonadj
alpha <- 0.1
bonadj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,bonadj=bonadj)
bonadj.outliers <- bonadj.p$pos[which(bonadj.p$bonadj < alpha)]
length(bonadj.outliers)
bonadj.out <- data.frame(pos=bonadj.outliers)
bonadj.out.table <- merge(bonadj.out, bonadj.p, by.x = "pos")
bonadj.out.table$pos <- gsub('Contig_', '', bonadj.out.table$pos)
bonadj.final.table <- data.frame(do.call('rbind', strsplit(as.character(bonadj.out.table$pos),':',fixed=TRUE)), bonadj.out.table$pvalue, bonadj.out.table$bonadj)
colnames(bonadj.final.table) <- c("contig","pos", "pvalue", "adjust")
View(bonadj.final.table)
# Bonferroni correction
bonadj <- p.adjust(x$pvalues,method="bonferroni")
head(bonadj)
bonadj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,bonadj=bonadj)
View(bonadj.p)
bonadj.outliers <- bonadj.p$pos[which(bonadj.p$bonadj < alpha)]
length(bonadj.outliers)
bonadj.out <- data.frame(pos=bonadj.outliers)
bonadj.out.table <- merge(bonadj.out, bonadj.p, by.x = "pos")
bonadj.out.table$pos <- gsub('Contig_', '', bonadj.out.table$pos)
bonadj.final.table <- data.frame(do.call('rbind', strsplit(as.character(bonadj.out.table$pos),':',fixed=TRUE)), bonadj.out.table$pvalue, bonadj.out.table$bonadj)
colnames(bonadj.final.table) <- c("contig","pos", "pvalue", "adjust")
View(bonadj.final.table)
q.final.table <- data.frame(do.call('rbind', strsplit(as.character(q.out.table$pos),':',fixed=TRUE)), q.out.table$pvalue, q.out.table$qval)
colnames(q.final.table) <- c("contig","pos", "pvalue", "qvalue")
View(q.final.table)
q.final.table$contig <- as.numeric(q.final.table$contig)
q.final.table$contig <- as.numeric(q.final.table$contig)
q.final.table <- q.final.table[order(q.final.table$contig, q.final.table$pos),]
View(q.final.table)
q.out.table$pos <- gsub('Contig_', '', q.out.table$pos)
q.final.table <- data.frame(do.call('rbind', strsplit(as.character(q.out.table$pos),':',fixed=TRUE)), q.out.table$pvalue, q.out.table$qval)
colnames(q.final.table) <- c("contig","pos", "pvalue", "qvalue")
View(q.out.table)
q.final.table$contig <- as.numeric(q.final.table$contig)
q.final.table$contig <- as.numeric(q.final.table$contig)
q.final.table <- data.frame(do.call('rbind', strsplit(as.character(q.out.table$pos),':',fixed=TRUE)), q.out.table$pvalue, q.out.table$qval)
View(q.final.table)
colnames(q.final.table) <- c("contig","pos", "pvalue", "qvalue")
View(q.final.table)
q.final.table$contig <- as.numeric(q.final.table$contig)
q.final.table$contig <- as.numeric(q.final.table$contig)
q.final.table <- q.final.table[order(q.final.table$contig, q.final.table$pos),]
View(q.final.table)
q.final.table$contig <- as.numeric(q.final.table$pos)
q.final.table <- q.final.table[order(q.final.table$contig, q.final.table$pos),]
View(q.final.table)
q.final.table <- data.frame(do.call('rbind', strsplit(as.character(q.out.table$pos),':',fixed=TRUE)), q.out.table$pvalue, q.out.table$qval)
colnames(q.final.table) <- c("contig","pos", "pvalue", "qvalue")
q.final.table$contig <- as.numeric(q.final.table$contig)
q.final.table$pos <- as.numeric(q.final.table$pos)
q.final.table <- q.final.table[order(q.final.table$contig, q.final.table$pos),]
View(q.final.table)
write.table(q.final.table, "E:/YiMing/pcadapt/qvalue_outliers.txt", row.names=FALSE, sep="\t", quote = FALSE)
##### Benjamini-Hochberg Procedure
padj <- p.adjust(x$pvalues,method="BH")
alpha <- 0.1
padj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,padj=padj)
padj.outliers <- padj.p$pos[which(padj.p$padj < alpha)]
length(padj.outliers)
padj.out <- data.frame(pos=padj.outliers)
padj.out.table <- merge(padj.out, padj.p, by.x = "pos")
padj.out.table$pos <- gsub('Contig_', '', padj.out.table$pos)
View(padj.out.table)
padj.final.table <- data.frame(do.call('rbind', strsplit(as.character(padj.out.table$pos),':',fixed=TRUE)), padj.out.table$pvalue, padj.out.table$padj)
View(padj.final.table)
c
colnames(padj.final.table) <- c("contig","pos", "pvalue", "BH-adjust-p")
View(padj.final.table)
colnames(padj.final.table) <- c("contig","pos", "pvalue", "BH-p")
padj.final.table$contig <- as.numeric(padj.final.table$contig)
padj.final.table$pos <- as.numeric(padj.final.table$pos)
padj.final.table <- padj.final.table[order(padj.final.table$contig, padj.final.table$pos),]
View(padj.final.table)
write.table(padj.final.table, "E:/YiMing/pcadapt/BH_outliers.txt", row.names=FALSE, sep="\t", quote = FALSE)
qval <- qvalue(x$pvalues)$qvalues
alpha <- 0.05
q.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,qval=qval)
q.outliers <- q.p$pos[which(q.p$qval < alpha)]
length(q.outliers)
# create final table by adding the contig and position information
q.out <- data.frame(pos=q.outliers)
q.out.table <- merge(q.out, q.p, by.x = "pos")
q.out.table$pos <- gsub('Contig_', '', q.out.table$pos)
q.final.table <- data.frame(do.call('rbind', strsplit(as.character(q.out.table$pos),':',fixed=TRUE)), q.out.table$pvalue, q.out.table$qval)
colnames(q.final.table) <- c("contig","pos", "pvalue", "qvalue")
q.final.table$contig <- as.numeric(q.final.table$contig)
q.final.table$pos <- as.numeric(q.final.table$pos)
q.final.table <- q.final.table[order(q.final.table$contig, q.final.table$pos),]
write.table(q.final.table, "E:/YiMing/pcadapt/qvalue_outliers.txt", row.names=FALSE, sep="\t", quote = FALSE)
padj <- p.adjust(x$pvalues,method="BH")
alpha <- 0.05
padj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,padj=padj)
padj.outliers <- padj.p$pos[which(padj.p$padj < alpha)]
length(padj.outliers)
padj.out <- data.frame(pos=padj.outliers)
padj.out.table <- merge(padj.out, padj.p, by.x = "pos")
padj.out.table$pos <- gsub('Contig_', '', padj.out.table$pos)
padj.final.table <- data.frame(do.call('rbind', strsplit(as.character(padj.out.table$pos),':',fixed=TRUE)), padj.out.table$pvalue, padj.out.table$padj)
colnames(padj.final.table) <- c("contig","pos", "pvalue", "BH-p")
padj.final.table$contig <- as.numeric(padj.final.table$contig)
padj.final.table$pos <- as.numeric(padj.final.table$pos)
padj.final.table <- padj.final.table[order(padj.final.table$contig, padj.final.table$pos),]
write.table(padj.final.table, "E:/YiMing/pcadapt/BH_outliers.txt", row.names=FALSE, sep="\t", quote = FALSE)
bonadj <- p.adjust(x$pvalues,method="bonferroni")
alpha <- 0.05
bonadj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,bonadj=bonadj)
bonadj.outliers <- bonadj.p$pos[which(bonadj.p$bonadj < alpha)]
length(bonadj.outliers)
bonadj.out <- data.frame(pos=bonadj.outliers)
bonadj.out.table <- merge(bonadj.out, bonadj.p, by.x = "pos")
bonadj.out.table$pos <- gsub('Contig_', '', bonadj.out.table$pos)
bonadj.final.table <- data.frame(do.call('rbind', strsplit(as.character(bonadj.out.table$pos),':',fixed=TRUE)), bonadj.out.table$pvalue, bonadj.out.table$bonadj)
colnames(bonadj.final.table) <- c("contig","pos", "pvalue", "adjust")
bonadj.final.table$contig <- as.numeric(bonadj.final.table$contig)
bonadj.final.table$contig <- as.numeric(bonadj.final.table$contig)
bonadj.final.table <- bonadj.final.table[order(bonadj.final.table$contig, bonadj.final.table$pos),]
write.table(bonadj.final.table, "E:/YiMing/pcadapt/bonferroni_outliers.txt", row.names=FALSE, sep="\t", quote = FALSE)
padj <- p.adjust(x$pvalues,method="BH")
alpha <- 0.1
padj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,padj=padj)
padj.outliers <- padj.p$pos[which(padj.p$padj < alpha)]
length(padj.outliers)
bonadj <- p.adjust(x$pvalues,method="bonferroni")
alpha <- 0.1
bonadj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,bonadj=bonadj)
bonadj.outliers <- bonadj.p$pos[which(bonadj.p$bonadj < alpha)]
length(bonadj.outliers)
bonadj <- p.adjust(x$pvalues,method="bonferroni")
alpha <- 0.05
bonadj.p <- data.frame(pos=pos$V2,pvalue=x$pvalues,bonadj=bonadj)
bonadj.outliers <- bonadj.p$pos[which(bonadj.p$bonadj < alpha)]
length(bonadj.outliers)
