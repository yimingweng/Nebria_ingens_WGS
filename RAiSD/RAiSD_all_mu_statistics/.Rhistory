setwd("C:/Users/wengz/Dropbox/Chapter 3/Nebria_ingens_WGS/omegaplus")
omegaplus.out <- read.table("omegaPlus_out_final")
View(omegaplus.out)
View(omegaplus.out)
d <- density(omegaplus.out$V3)
plot(d)
d <- density(omegaplus.out$V3, xlim=c(1, 10))
plot(d)
library(openintro)
install.packages("openintro")
library(openintro)
d <- densityPlot(omegaplus.out$V3, xlim=c(1, 10))
d <- densityPlot(omegaplus.out$V3, xlim=c(1, 100))
d <- densityPlot(omegaplus.out$V3, xlim=c(20, 100))
plot(d)
densityPlot(omegaplus.out$V3, xlim=c(20, 100))
d <- densityPlot(omegaplus.out$V3, xlim=c(1, 100))
View(omegaplus.out)
out <- which(omegaplus.out$V3 > 100)
length(out)
quantile=0.99
upper_bound <- quantile(omegaplus.out$V3, quantile)
outliers <- omegaplus.out[which(omegaplus.out$V3 > upper_bound),]
quantile=0.999
upper_bound <- quantile(omegaplus.out$V3, quantile)
outliers <- omegaplus.out[which(omegaplus.out$V3 > upper_bound),]
d <- densityPlot(log(omegaplus.out$V3), xlim=c(1, 100))
d <- densityPlot(log(omegaplus.out$V3))
View(omegaplus.out)
d <- densityPlot(log(omegaplus.out$V3), xlim=3)
d <- densityPlot(log(omegaplus.out$V3), xlim=c(0,3))
View(outliers)
out <- which(log(omegaplus.out$V3) > 2.5)
length(out)
out <- which(log(omegaplus.out$V3) > 2.5)
length(out)
out <- which(log(omegaplus.out$V3) > 3)
length(out)
log(omegaplus.out$V3
)
max(log(omegaplus.out$V3))
max(omegaplus.out$V3)
?log
max(log10(omegaplus.out$V3))
out <- which(log10(omegaplus.out$V3) > 3)
length(out)
d <- densityPlot(log10(omegaplus.out$V3), xlim=c(0,3))
plot(d)
d <- densityPlot(log10(omegaplus.out$V3), xlim=c(0,3))
out <- which(log10(omegaplus.out$V3) > 1)
length(out)
out <- which(log10(omegaplus.out$V3) > 2)
length(out)
out <- which(log10(omegaplus.out$V3) > 1.5)
length(out)
length(outliers)
length(outliers$V3)
out <- which(log10(omegaplus.out$V3) > 2)
length(out)
out <- which(log10(omegaplus.out$V3) > 1.5)
length(out)
quantile=0.99
upper_bound <- quantile(omegaplus.out$V3, quantile)
outliers <- omegaplus.out[which(omegaplus.out$V3 > upper_bound),]
length(outliers$V3)
quantile=0.995
upper_bound <- quantile(omegaplus.out$V3, quantile)
outliers <- omegaplus.out[which(omegaplus.out$V3 > upper_bound),]
length(outliers$V3)
quantile=0.997
upper_bound <- quantile(omegaplus.out$V3, quantile)
outliers <- omegaplus.out[which(omegaplus.out$V3 > upper_bound),]
length(outliers$V3)
out <- which(log10(omegaplus.out$V3) > 1.5)
length(out)
densityPlot(log10(omegaplus.out$V3), xlim=c(0,3), fill="red")
densityPlot(log10(omegaplus.out$V3), xlim=c(0,3), col="red")
?densityPlot
?abline
abline(v=1.5)
abline(v=1.5, type="2")
abline(v=1.5, lty=2)
densityPlot(log10(omegaplus.out$V3), xlim=c(0,3), fill="red")
abline(v=1.5, lty=2)
densityPlot(log10(omegaplus.out$V3), xlim=c(0,3), col="red")
abline(v=1.5, lty=2)
length(out)
quantile=0.997
upper_bound <- quantile(omegaplus.out$V3, quantile)
outliers <- omegaplus.out[which(omegaplus.out$V3 > upper_bound),]
length(outliers$V3)
quantile=0.9975
upper_bound <- quantile(omegaplus.out$V3, quantile)
outliers <- omegaplus.out[which(omegaplus.out$V3 > upper_bound),]
length(outliers$V3)
quantile=0.9974
upper_bound <- quantile(omegaplus.out$V3, quantile)
outliers <- omegaplus.out[which(omegaplus.out$V3 > upper_bound),]
length(outliers$V3)
quantile=0.99745
upper_bound <- quantile(omegaplus.out$V3, quantile)
outliers <- omegaplus.out[which(omegaplus.out$V3 > upper_bound),]
length(outliers$V3)
quantile=0.99735
upper_bound <- quantile(omegaplus.out$V3, quantile)
outliers <- omegaplus.out[which(omegaplus.out$V3 > upper_bound),]
length(outliers$V3)
out <- which(log10(omegaplus.out$V3) > 2)
length(out)
quantile=0.999
upper_bound <- quantile(omegaplus.out$V3, quantile)
outliers <- omegaplus.out[which(omegaplus.out$V3 > upper_bound),]
length(outliers$V3)
quantile=0.9995
upper_bound <- quantile(omegaplus.out$V3, quantile)
outliers <- omegaplus.out[which(omegaplus.out$V3 > upper_bound),]
length(outliers$V3)
out <- which(log10(omegaplus.out$V3) > 1.5)
length(out)
out <- which(log10(omegaplus.out$V3) > 1.5)
outliers <- omegaplus.out[which(log10(omegaplus.out$V3) > 1.5,]
outliers <- omegaplus.out[which(log10(omegaplus.out$V3) > 1.5), ]
View(outliers)
bed <- cbind(outliers$V1, outliers$V2, outliers$V2)
View(bed)
View(omegaplus.out)
omegaplus.out[omegaplus.out$V3 == 0] <- 0.000001
omegaplus.out$V3[omegaplus.out$V3 == 0] <- 0.000001
View(outliers)
View(omegaplus.out)
############### Probably better option ################
# considering the distribution of omega statistic and get the most extreme omegas
densityPlot(log10(omegaplus.out$V3), xlim=c(0,3), col="red")
omegaplus.out <- read.table("omegaPlus_out_final")
############### Probably better option ################
# considering the distribution of omega statistic and get the most extreme omegas
densityPlot(log10(omegaplus.out$V3), xlim=c(0,3), col="red")
omegaplus.out$V3[omegaplus.out$V3 == 0] <- 0.000000000001
############### Probably better option ################
# considering the distribution of omega statistic and get the most extreme omegas
densityPlot(log10(omegaplus.out$V3), xlim=c(0,3), col="red")
omegaplus.out <- read.table("omegaPlus_out_final")
densityPlot(log10(omegaplus.out$V3), xlim=c(0,3), col="red")
# define the cutoff to be log10(omegaplus.out$V3) > 1.5 (omega > 31.6)
abline(v=1.5, lty=2)
out <- which(log10(omegaplus.out$V3) > 1.5) # omega > 31.6
length(out) # 3876
outliers <- omegaplus.out[which(log10(omegaplus.out$V3) > 1.5), ]
bed <- cbind(outliers$V1, outliers$V2, outliers$V2)
write.table(bed, "omegaplus_316.bed", quote=F, col.names = F, row.names = F, sep="\t")
setwd("C:/Users/wengz/Dropbox/Chapter 3/Nebria_ingens_WGS/RAiSD/RAiSD_all_mu_statistics")
setwd("C:/Users/wengz/Dropbox/Chapter 3/Nebria_ingens_WGS/RAiSD/RAiSD_all_mu_statistics")
# Army
Army.out <- read.table("Army_all_mu_stat")
# Army
raisd.out <- read.table("Army_all_mu_stat")
View(raisd.out)
View(raisd.out)
# considering the distribution of omega statistic and get the most extreme omegas
densityPlot(raisd.out$V7)
# Conness
raisd.out <- read.table("Conness_all_mu_stat")
# considering the distribution of omega statistic and get the most extreme omegas
densityPlot(raisd.out$V7)
raisd.out <- read.table("Crabtree_all_mu_stat")
# considering the distribution of omega statistic and get the most extreme omegas
densityPlot(raisd.out$V7)
View(raisd.out)
View(raisd.out)
# Army
raisd.out <- read.table("Army_all_mu_stat")
View(raisd.out)
# define outlier and write them into a bed file
upper_bound <- quantile(raisd.out$V7, 0.999)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers)
length(outliers$V7)
View(outliers)
raisd.out <- read.table("Crabtree_all_mu_stat")
# considering the distribution of omega statistic and get the most extreme omegas
densityPlot(raisd.out$V7)
upper_bound <- quantile(raisd.out$V7, 0.999)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
abline(v=upper_bound)
raisd.out <- read.table("Army_all_mu_stat")
# considering the distribution of omega statistic and get the most extreme omegas
densityPlot(raisd.out$V7)
# define outlier and write them into a bed file
upper_bound <- quantile(raisd.out$V7, 0.999)
abline(v=upper_bound)
densityPlot(raisd.out$V7)
# define outlier and write them into a bed file
upper_bound <- quantile(raisd.out$V7, 0.995)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
View(outliers)
raisd.out <- read.table("Crabtree_all_mu_stat")
# considering the distribution of omega statistic and get the most extreme omegas
densityPlot(raisd.out$V7)
upper_bound <- quantile(raisd.out$V7, 0.995)
abline(v=upper_bound)
View(outliers)
raisd.out <- read.table("Army_all_mu_stat")
for (i in 1:999){
q=0.9+i/10000
print(q)
upper_bound <- quantile(raisd.out$V7, q)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
bed <- cbind(outliers$V8, outliers$V1, outliers$V1)
write.table(bed, file=paste(q, "_quantile.bed", sep=""), quote=F, col.names = F, row.names = F, sep="\t")
}
upper_bound <- quantile(raisd.out$V7, 0.9)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
upper_bound <- quantile(raisd.out$V7, 0.99)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
densityPlot(raisd.out$V7)
# define outlier and write them into a bed file
upper_bound <- quantile(raisd.out$V7, 0.99)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
densityPlot(raisd.out$V7)
# define outlier and write them into a bed file
upper_bound <- quantile(raisd.out$V7, 0.9)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
upper_bound <- quantile(raisd.out$V7, 0.999)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
raisd.out$V9 <- c(1:429921)
View(raisd.out)
x11()
plot(raisd.out$V9, raisd.out$V7)
x11()
plot(raisd.out$V9, -log(raisd.out$V7))
x11()
plot(raisd.out$V9, raisd.out$V7, ces=19)
x11()
plot(raisd.out$V9, raisd.out$V7, size=1)
x11()
plot(raisd.out$V9, raisd.out$V7, pch=20)
x11()
plot(raisd.out$V9, raisd.out$V7, pch=20, cex=0.2)
upper_bound <- quantile(raisd.out$V7, 0.998)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
upper_bound <- quantile(raisd.out$V7, 0.997)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
upper_bound <- quantile(raisd.out$V7, 0.996)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
upper_bound <- quantile(raisd.out$V7, 0.995)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
upper_bound <- quantile(raisd.out$V7, 0.994)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
upper_bound <- quantile(raisd.out$V7, 0.993)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
upper_bound <- quantile(raisd.out$V7, 0.992)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
upper_bound <- quantile(raisd.out$V7, 0.991)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
upper_bound <- quantile(raisd.out$V7, 0.990)
abline(v=upper_bound)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
x11()
plot(raisd.out$V9, raisd.out$V7, pch=20, cex=0.2)
View(raisd.out)
x11()
plot(raisd.out$V9, raisd.out$V7, pch=20, cex=0.2)
raisd.out$Colour[raisd.out$V7>=5e-11]="red"
raisd.out$Colour[raisd.out$V7<=5e-11]="blue"
x11()
plot(raisd.out$V9, raisd.out$V7, pch=20, cex=0.2, col=raisd.out$Colour)
View(raisd.out)
length(raisd.out$Colour[which(raisd.out$Colour=="red")])
upper_bound <- quantile(raisd.out$V7, 0.990)
length(outliers$V7)
upper_bound <- quantile(raisd.out$V7, 0.995)
length(outliers$V7)
upper_bound <- quantile(raisd.out$V7, 0.995)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
length(outliers$V7)
abline(v=upper_bound, col="red")
# considering the distribution of omega statistic and get the most extreme omegas
densityPlot(raisd.out$V7)
abline(v=upper_bound, col="red")
raisd.out$Colour[raisd.out$V7>=5e-11]="red"
raisd.out$Colour[raisd.out$V7<=5e-11]="black"
x11()
plot(raisd.out$V9, raisd.out$V7, pch=20, cex=0.2, col=raisd.out$Colour)
list.files(path = "C:/Users/wengz/Dropbox/Chapter 3/Nebria_ingens_WGS/RAiSD/RAiSD_all_mu_statistics")
pop <- list.files(path = "C:/Users/wengz/Dropbox/Chapter 3/Nebria_ingens_WGS/RAiSD/RAiSD_all_mu_statistics")
pop <- list.files(path = "C:/Users/wengz/Dropbox/Chapter 3/Nebria_ingens_WGS/RAiSD/RAiSD_all_mu_statistics")
for (i in 1:length(pop)){
print(i)
}
for (i in 1:length(pop)){
pop <- pop[i]
print(pop)
}
for (i in 1:length(pop)){
pop <- pop[[i]]
print(pop)
}
for (i in 1:length(pop)){
population <- pop[[i]]
print(population)
}
for (i in 1:length(pop)){
population <- pop[i]
print(population)
}
pop[i]
pop <- list.files(path = "C:/Users/wengz/Dropbox/Chapter 3/Nebria_ingens_WGS/RAiSD/RAiSD_all_mu_statistics")
for (i in 1:length(pop)){
population <- pop[i]
print(population)
}
# Army
raisd.out <- read.table("Army_all_mu_stat")
length(raisd.out)
length(raisd.out$V7)
q=0.995
pdf("test.pdf")
for (i in 1:length(pop)){
population <- pop[i]
raisd.out <- read.table(population)
raisd.out$V9 <- c(1:length(raisd.out$V7))
upper_bound <- quantile(raisd.out$V7, q)
raisd.out$Colour[raisd.out$V7>=upper_bound]="red"
raisd.out$Colour[raisd.out$V7<=upper_bound]="black"
plot(raisd.out$V9, raisd.out$V7, pch=20, cex=0.2, col=raisd.out$Colour)
}
dev.off()
tiff("test.tif")
dev.off()
q=0.995
tiff("test.tif")
for (i in 1:length(pop)){
print(paste("working on ", i, " ..."))
population <- pop[i]
raisd.out <- read.table(population)
raisd.out$V9 <- c(1:length(raisd.out$V7))
upper_bound <- quantile(raisd.out$V7, q)
raisd.out$Colour[raisd.out$V7>=upper_bound]="red"
raisd.out$Colour[raisd.out$V7<=upper_bound]="black"
plot(raisd.out$V9, raisd.out$V7, pch=20, cex=0.2, col=raisd.out$Colour)
}
dev.off()
for (i in 1:length(pop)){
population <- pop[i]
print(paste("working on ",population, " ..."))
tiff(population)
raisd.out <- read.table(population)
raisd.out$V9 <- c(1:length(raisd.out$V7))
upper_bound <- quantile(raisd.out$V7, q)
raisd.out$Colour[raisd.out$V7>=upper_bound]="red"
raisd.out$Colour[raisd.out$V7<=upper_bound]="black"
plot(raisd.out$V9, raisd.out$V7, pch=20, cex=0.2, col=raisd.out$Colour)
dev.off()
}
for (i in 1:length(pop)){
population <- pop[i]
print(paste("working on",population, " ..."))
tiff("paste0(population,".tiff")")
raisd.out <- read.table(population)
raisd.out$V9 <- c(1:length(raisd.out$V7))
upper_bound <- quantile(raisd.out$V7, q)
raisd.out$Colour[raisd.out$V7>=upper_bound]="red"
raisd.out$Colour[raisd.out$V7<=upper_bound]="black"
plot(raisd.out$V9, raisd.out$V7, pch=20, cex=0.2, col=raisd.out$Colour)
dev.off()
}
q=0.995
for (i in 1:length(pop)){
population <- pop[i]
print(paste("working on",population, " ..."))
tiff(file=paste(population, ".tiff", sep=""))
raisd.out <- read.table(population)
raisd.out$V9 <- c(1:length(raisd.out$V7))
upper_bound <- quantile(raisd.out$V7, q)
raisd.out$Colour[raisd.out$V7>=upper_bound]="red"
raisd.out$Colour[raisd.out$V7<=upper_bound]="black"
plot(raisd.out$V9, raisd.out$V7, pch=20, cex=0.2, col=raisd.out$Colour)
dev.off()
}
pdf(all_distribution.pdf)
for (i in 1:length(pop)){
population <- pop[i]
print(paste("working on",population, " ..."))
raisd.out <- read.table(population)
upper_bound <- quantile(raisd.out$V7, q)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
abline(v=upper_bound, col="red")
}
dev.off()
pdf("all_distribution.pdf")
for (i in 1:length(pop)){
population <- pop[i]
print(paste("working on",population, " ..."))
raisd.out <- read.table(population)
upper_bound <- quantile(raisd.out$V7, q)
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
abline(v=upper_bound, col="red")
}
dev.off()
pdf("all_distribution.pdf")
for (i in 1:length(pop)){
population <- pop[i]
print(paste("working on",population, " ..."))
raisd.out <- read.table(population)
upper_bound <- quantile(raisd.out$V7, q)
densityPlot(raisd.out$V7)
abline(v=upper_bound, col="red")
}
dev.off()
pdf("all_distribution.pdf")
for (i in 1:length(pop)){
population <- pop[i]
print(paste("working on",population, "..."))
raisd.out <- read.table(population)
upper_bound <- quantile(raisd.out$V7, q)
densityPlot(raisd.out$V7)
abline(v=upper_bound, col="red")
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
bed <- cbind(outliers$V8, outliers$V1, outliers$V1)
write.table(bed, file=paste(population, "995quantile.bed", sep=""), quote=F, col.names = F, row.names = F, sep="\t")
}
dev.off()
q=0.999
for (i in 1:length(pop)){
population <- pop[i]
print(paste("working on",population, " ..."))
tiff(file=paste(population, ".tiff", sep=""))
raisd.out <- read.table(population)
raisd.out$V9 <- c(1:length(raisd.out$V7))
upper_bound <- quantile(raisd.out$V7, q)
raisd.out$Colour[raisd.out$V7>=upper_bound]="red"
raisd.out$Colour[raisd.out$V7<=upper_bound]="black"
plot(raisd.out$V9, raisd.out$V7, pch=20, cex=0.2, col=raisd.out$Colour)
dev.off()
}
pdf("all_distribution.pdf")
for (i in 1:length(pop)){
population <- pop[i]
print(paste("working on",population, "..."))
raisd.out <- read.table(population)
upper_bound <- quantile(raisd.out$V7, q)
densityPlot(raisd.out$V7)
abline(v=upper_bound, col="red")
outliers <- raisd.out[which(raisd.out$V7 > upper_bound),]
bed <- cbind(outliers$V8, outliers$V1, outliers$V1)
write.table(bed, file=paste(population, "995quantile.bed", sep=""), quote=F, col.names = F, row.names = F, sep="\t")
}
dev.off()
